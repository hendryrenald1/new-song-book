{"version":3,"sources":["components/AutoCompleteText.js","components/SongList.js","components/SearchPage.js","components/MainPage.js","components/SongDetailsPage.js","components/NavbarPage.js","components/FooterPage.js","App.js","registerServiceWorker.js","index.js"],"names":["React","Component","SongList","this","props","songs","filter","song","search","searchChordedOnly","chorded","searchRecordedOnly","recording","searchTarget","name","searchLyrics","lyrics","toLowerCase","includes","searchInput","sort","a","b","map","selected","className","key","_id","onClick","selectSong","SearchPage","state","display","md","type","placeholder","onChange","handleSearchChange","MainPage","clickCount","viewLogin","admin","edit","getSongs","axios","get","then","response","setState","data","catch","error","console","log","history","push","pathname","event","target","value","parameter","token","window","localStorage","getItem","id","SongDetailsPage","location","replace","goBack","gradient","rounded","NavbarPage","isOpen","toggleCollapse","fixed","dark","expand","src","href","height","alt","navbar","right","active","to","FooterPage","fluid","Date","getFullYear","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.26c2788c.chunk.js","sourcesContent":["import React from \"react\";\n\nclass AutoCompleteText extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.items = [\"David\", \"Damien\", \"Sara\", \"Jane\"];\n  }\n\n  render() {\n    return (\n      <div>\n        <input type=\"text\" onChange={(e) => console.log(e.target.value)} />\n        <ul>\n          {this.items.map((item) => (\n            <li> {item}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default AutoCompleteText;\n","import React from \"react\";\n\nclass SongList extends React.Component {\n  render() {\n    return this.props.songs\n      .filter((song) => {\n        if (this.props.search.searchChordedOnly && song.chorded === false)\n          return false;\n        if (this.props.search.searchRecordedOnly && song.recording === \"\")\n          return false;\n\n        let searchTarget = song.name;\n        if (this.props.search.searchLyrics) searchTarget += song.lyrics;\n        searchTarget = searchTarget.toLowerCase();\n        return searchTarget.includes(this.props.search.searchInput);\n      })\n      .sort((a, b) => (a.name > b.name ? 1 : -1))\n      .map((song) => {\n        const classes =\n          \"songlink\" + (this.props.selected === song ? \" selectedsong\" : \"\");\n        return (\n          <li\n            className=\"list-group-item\"\n            key={song._id}\n            onClick={() => this.props.selectSong(song)}\n          >\n            {\" \"}\n            {song.name}{\" \"}\n          </li>\n          // <MDBCard key={song._id}>\n          //   <MDBCardBody key={song._id}>\n          //     <MDBCardText\n          //       key={song._id}\n          //       onClick={() => this.props.selectSong(song)}\n          //     >\n          //       {song.name}\n          //     </MDBCardText>\n          //   </MDBCardBody>\n          // </MDBCard>\n        );\n      });\n  }\n}\n\nexport default SongList;\n\n// import React from \"react\";\n// import { MDBDataTable } from \"mdbreact\";\n// import { Link } from \"react-router-dom\";\n\n// const SongList = () => {\n//   const data = {\n//     columns: [\n//       {\n//         label: \"Title\",\n//         field: \"name\",\n//         sort: \"asc\",\n\n//         width: 150,\n//       },\n//     ],\n//     rows: [\n//       {\n//         name: <Link to=\"/new\"> Tiger Nixon </Link>,\n//         position: \"System Architect\",\n//         office: \"Edinburgh\",\n//         age: \"61\",\n//         date: \"2011/04/25\",\n//         salary: \"$320\",\n//       },\n//       {\n//         name: \"Garrett Winters\",\n//         position: \"Accountant\",\n//         office: \"Tokyo\",\n//         age: \"63\",\n//         date: \"2011/07/25\",\n//         salary: \"$170\",\n//       },\n//       {\n//         name: \"Ashton Cox\",\n//         position: \"Junior Technical Author\",\n//         office: \"San Francisco\",\n//         age: \"66\",\n//         date: \"2009/01/12\",\n//         salary: \"$86\",\n//       },\n//       {\n//         name: \"Cedric Kelly\",\n//         position: \"Senior Javascript Developer\",\n//         office: \"Edinburgh\",\n//         age: \"22\",\n//         date: \"2012/03/29\",\n//         salary: \"$433\",\n//       },\n//       {\n//         name: \"Airi Satou\",\n//         position: \"Accountant\",\n//         office: \"Tokyo\",\n//         age: \"33\",\n//         date: \"2008/11/28\",\n//         salary: \"$162\",\n//       },\n//       {\n//         name: \"Brielle Williamson\",\n//         position: \"Integration Specialist\",\n//         office: \"New York\",\n//         age: \"61\",\n//         date: \"2012/12/02\",\n//         salary: \"$372\",\n//       },\n//       {\n//         name: \"Herrod Chandler\",\n//         position: \"Sales Assistant\",\n//         office: \"San Francisco\",\n//         age: \"59\",\n//         date: \"2012/08/06\",\n//         salary: \"$137\",\n//       },\n//       {\n//         name: \"Rhona Davidson\",\n//         position: \"Integration Specialist\",\n//         office: \"Tokyo\",\n//         age: \"55\",\n//         date: \"2010/10/14\",\n//         salary: \"$327\",\n//       },\n//       {\n//         name: \"Colleen Hurst\",\n//         position: \"Javascript Developer\",\n//         office: \"San Francisco\",\n//         age: \"39\",\n//         date: \"2009/09/15\",\n//         salary: \"$205\",\n//       },\n//       {\n//         name: \"Sonya Frost\",\n//         position: \"Software Engineer\",\n//         office: \"Edinburgh\",\n//         age: \"23\",\n//         date: \"2008/12/13\",\n//         salary: \"$103\",\n//       },\n//       {\n//         name: \"Jena Gaines\",\n//         position: \"Office Manager\",\n//         office: \"London\",\n//         age: \"30\",\n//         date: \"2008/12/19\",\n//         salary: \"$90\",\n//       },\n//       {\n//         name: \"Quinn Flynn\",\n//         position: \"Support Lead\",\n//         office: \"Edinburgh\",\n//         age: \"22\",\n//         date: \"2013/03/03\",\n//         salary: \"$342\",\n//       },\n//       {\n//         name: \"Charde Marshall\",\n//         position: \"Regional Director\",\n//         office: \"San Francisco\",\n//         age: \"36\",\n//         date: \"2008/10/16\",\n//         salary: \"$470\",\n//       },\n//       {\n//         name: \"Haley Kennedy\",\n//         position: \"Senior Marketing Designer\",\n//         office: \"London\",\n//         age: \"43\",\n//         date: \"2012/12/18\",\n//         salary: \"$313\",\n//       },\n//       {\n//         name: \"Tatyana Fitzpatrick\",\n//         position: \"Regional Director\",\n//         office: \"London\",\n//         age: \"19\",\n//         date: \"2010/03/17\",\n//         salary: \"$385\",\n//       },\n//       {\n//         name: \"Michael Silva\",\n//         position: \"Marketing Designer\",\n//         office: \"London\",\n//         age: \"66\",\n//         date: \"2012/11/27\",\n//         salary: \"$198\",\n//       },\n//       {\n//         name: \"Paul Byrd\",\n//         position: \"Chief Financial Officer (CFO)\",\n//         office: \"New York\",\n//         age: \"64\",\n//         date: \"2010/06/09\",\n//         salary: \"$725\",\n//       },\n//       {\n//         name: \"Gloria Little\",\n//         position: \"Systems Administrator\",\n//         office: \"New York\",\n//         age: \"59\",\n//         date: \"2009/04/10\",\n//         salary: \"$237\",\n//       },\n//       {\n//         name: \"Bradley Greer\",\n//         position: \"Software Engineer\",\n//         office: \"London\",\n//         age: \"41\",\n//         date: \"2012/10/13\",\n//         salary: \"$132\",\n//       },\n//       {\n//         name: \"Dai Rios\",\n//         position: \"Personnel Lead\",\n//         office: \"Edinburgh\",\n//         age: \"35\",\n//         date: \"2012/09/26\",\n//         salary: \"$217\",\n//       },\n//       {\n//         name: \"Jenette Caldwell\",\n//         position: \"Development Lead\",\n//         office: \"New York\",\n//         age: \"30\",\n//         date: \"2011/09/03\",\n//         salary: \"$345\",\n//       },\n//       {\n//         name: \"Yuri Berry\",\n//         position: \"Chief Marketing Officer (CMO)\",\n//         office: \"New York\",\n//         age: \"40\",\n//         date: \"2009/06/25\",\n//         salary: \"$675\",\n//       },\n//       {\n//         name: \"Caesar Vance\",\n//         position: \"Pre-Sales Support\",\n//         office: \"New York\",\n//         age: \"21\",\n//         date: \"2011/12/12\",\n//         salary: \"$106\",\n//       },\n//       {\n//         name: \"Doris Wilder\",\n//         position: \"Sales Assistant\",\n//         office: \"Sidney\",\n//         age: \"23\",\n//         date: \"2010/09/20\",\n//         salary: \"$85\",\n//       },\n//       {\n//         name: \"Angelica Ramos\",\n//         position: \"Chief Executive Officer (CEO)\",\n//         office: \"London\",\n//         age: \"47\",\n//         date: \"2009/10/09\",\n//         salary: \"$1\",\n//       },\n//       {\n//         name: \"Gavin Joyce\",\n//         position: \"Developer\",\n//         office: \"Edinburgh\",\n//         age: \"42\",\n//         date: \"2010/12/22\",\n//         salary: \"$92\",\n//       },\n//       {\n//         name: \"Jennifer Chang\",\n//         position: \"Regional Director\",\n//         office: \"Singapore\",\n//         age: \"28\",\n//         date: \"2010/11/14\",\n//         salary: \"$357\",\n//       },\n//       {\n//         name: \"Brenden Wagner\",\n//         position: \"Software Engineer\",\n//         office: \"San Francisco\",\n//         age: \"28\",\n//         date: \"2011/06/07\",\n//         salary: \"$206\",\n//       },\n//       {\n//         name: \"Fiona Green\",\n//         position: \"Chief Operating Officer (COO)\",\n//         office: \"San Francisco\",\n//         age: \"48\",\n//         date: \"2010/03/11\",\n//         salary: \"$850\",\n//       },\n//       {\n//         name: \"Shou Itou\",\n//         position: \"Regional Marketing\",\n//         office: \"Tokyo\",\n//         age: \"20\",\n//         date: \"2011/08/14\",\n//         salary: \"$163\",\n//       },\n//       {\n//         name: \"Michelle House\",\n//         position: \"Integration Specialist\",\n//         office: \"Sidney\",\n//         age: \"37\",\n//         date: \"2011/06/02\",\n//         salary: \"$95\",\n//       },\n//       {\n//         name: \"Suki Burks\",\n//         position: \"Developer\",\n//         office: \"London\",\n//         age: \"53\",\n//         date: \"2009/10/22\",\n//         salary: \"$114\",\n//       },\n//       {\n//         name: \"Prescott Bartlett\",\n//         position: \"Technical Author\",\n//         office: \"London\",\n//         age: \"27\",\n//         date: \"2011/05/07\",\n//         salary: \"$145\",\n//       },\n//       {\n//         name: \"Gavin Cortez\",\n//         position: \"Team Leader\",\n//         office: \"San Francisco\",\n//         age: \"22\",\n//         date: \"2008/10/26\",\n//         salary: \"$235\",\n//       },\n//       {\n//         name: \"Martena Mccray\",\n//         position: \"Post-Sales support\",\n//         office: \"Edinburgh\",\n//         age: \"46\",\n//         date: \"2011/03/09\",\n//         salary: \"$324\",\n//       },\n//       {\n//         name: \"Unity Butler\",\n//         position: \"Marketing Designer\",\n//         office: \"San Francisco\",\n//         age: \"47\",\n//         date: \"2009/12/09\",\n//         salary: \"$85\",\n//       },\n//       {\n//         name: \"Howard Hatfield\",\n//         position: \"Office Manager\",\n//         office: \"San Francisco\",\n//         age: \"51\",\n//         date: \"2008/12/16\",\n//         salary: \"$164\",\n//       },\n//       {\n//         name: \"Hope Fuentes\",\n//         position: \"Secretary\",\n//         office: \"San Francisco\",\n//         age: \"41\",\n//         date: \"2010/02/12\",\n//         salary: \"$109\",\n//       },\n//       {\n//         name: \"Vivian Harrell\",\n//         position: \"Financial Controller\",\n//         office: \"San Francisco\",\n//         age: \"62\",\n//         date: \"2009/02/14\",\n//         salary: \"$452\",\n//       },\n//       {\n//         name: \"Timothy Mooney\",\n//         position: \"Office Manager\",\n//         office: \"London\",\n//         age: \"37\",\n//         date: \"2008/12/11\",\n//         salary: \"$136\",\n//       },\n//       {\n//         name: \"Jackson Bradshaw\",\n//         position: \"Director\",\n//         office: \"New York\",\n//         age: \"65\",\n//         date: \"2008/09/26\",\n//         salary: \"$645\",\n//       },\n//       {\n//         name: \"Olivia Liang\",\n//         position: \"Support Engineer\",\n//         office: \"Singapore\",\n//         age: \"64\",\n//         date: \"2011/02/03\",\n//         salary: \"$234\",\n//       },\n//       {\n//         name: \"Bruno Nash\",\n//         position: \"Software Engineer\",\n//         office: \"London\",\n//         age: \"38\",\n//         date: \"2011/05/03\",\n//         salary: \"$163\",\n//       },\n//       {\n//         name: \"Sakura Yamamoto\",\n//         position: \"Support Engineer\",\n//         office: \"Tokyo\",\n//         age: \"37\",\n//         date: \"2009/08/19\",\n//         salary: \"$139\",\n//       },\n//       {\n//         name: \"Thor Walton\",\n//         position: \"Developer\",\n//         office: \"New York\",\n//         age: \"61\",\n//         date: \"2013/08/11\",\n//         salary: \"$98\",\n//       },\n//       {\n//         name: \"Finn Camacho\",\n//         position: \"Support Engineer\",\n//         office: \"San Francisco\",\n//         age: \"47\",\n//         date: \"2009/07/07\",\n//         salary: \"$87\",\n//       },\n//       {\n//         name: \"Serge Baldwin\",\n//         position: \"Data Coordinator\",\n//         office: \"Singapore\",\n//         age: \"64\",\n//         date: \"2012/04/09\",\n//         salary: \"$138\",\n//       },\n//       {\n//         name: \"Zenaida Frank\",\n//         position: \"Software Engineer\",\n//         office: \"New York\",\n//         age: \"63\",\n//         date: \"2010/01/04\",\n//         salary: \"$125\",\n//       },\n//       {\n//         name: \"Zorita Serrano\",\n//         position: \"Software Engineer\",\n//         office: \"San Francisco\",\n//         age: \"56\",\n//         date: \"2012/06/01\",\n//         salary: \"$115\",\n//       },\n//       {\n//         name: \"Jennifer Acosta\",\n//         position: \"Junior Javascript Developer\",\n//         office: \"Edinburgh\",\n//         age: \"43\",\n//         date: \"2013/02/01\",\n//         salary: \"$75\",\n//       },\n//       {\n//         name: \"Cara Stevens\",\n//         position: \"Sales Assistant\",\n//         office: \"New York\",\n//         age: \"46\",\n//         date: \"2011/12/06\",\n//         salary: \"$145\",\n//       },\n//       {\n//         name: \"Hermione Butler\",\n//         position: \"Regional Director\",\n//         office: \"London\",\n//         age: \"47\",\n//         date: \"2011/03/21\",\n//         salary: \"$356\",\n//       },\n//       {\n//         name: \"Lael Greer\",\n//         position: \"Systems Administrator\",\n//         office: \"London\",\n//         age: \"21\",\n//         date: \"2009/02/27\",\n//         salary: \"$103\",\n//       },\n//       {\n//         name: \"Jonas Alexander\",\n//         position: \"Developer\",\n//         office: \"San Francisco\",\n//         age: \"30\",\n//         date: \"2010/07/14\",\n//         salary: \"$86\",\n//       },\n//       {\n//         name: \"Shad Decker\",\n//         position: \"Regional Director\",\n//         office: \"Edinburgh\",\n//         age: \"51\",\n//         date: \"2008/11/13\",\n//         salary: \"$183\",\n//       },\n//       {\n//         name: \"Michael Bruce\",\n//         position: \"Javascript Developer\",\n//         office: \"Singapore\",\n//         age: \"29\",\n//         date: \"2011/06/27\",\n//         salary: \"$183\",\n//       },\n//       {\n//         name: <Link to=\"/\">\"Donna Snider\" </Link>,\n//         position: \"Customer Support\",\n//         office: \"New York\",\n//         age: \"27\",\n//         date: \"2011/01/25\",\n//         salary: \"$112\",\n//       },\n//     ],\n//   };\n\n//   return (\n//     <MDBDataTable\n//       displayEntries={false}\n//       searching={false}\n//       striped\n//       bordered\n//       hover\n//       data={data}\n//     />\n//   );\n// };\n\n// export default SongList;\n","import React from \"react\";\nimport { MDBCol, MDBContainer } from \"mdbreact\";\n\nclass SearchPage extends React.Component {\n  state = { display: \"none\" };\n\n  render() {\n    return (\n      <>\n        <MDBContainer>\n          <MDBCol md=\"12\">\n            <span className=\"d-block p-2 bg-dark\">\n              <input\n                type=\"text\"\n                className=\"form-control form-control-lg \"\n                name=\"searchInput\"\n                placeholder=\"Search Songs....\"\n                onChange={this.props.handleSearchChange}\n              ></input>\n            </span>\n            {/* <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Enter the song to search....\"\n              aria-label=\"Search\"\n            \n              onChange={this.props.handleSearchChange}\n            /> */}\n          </MDBCol>\n          {/* <MDBBtn href=\"#\" gradient=\"purple\" rounded>\n        Search\n      </MDBBtn> */}\n        </MDBContainer>\n      </>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, { Component, Fragment } from \"react\";\n\nimport AutoCompleteText from \"./AutoCompleteText\";\n\nimport \".././index.css\";\nimport axios from \"axios\";\nimport SongList from \"./SongList\";\nimport SearchPage from \"./SearchPage\";\nconst apiUrl = \"/api/songs\";\n\n// const apiUrl = \"https://fcm-song-book-demo.herokuapp.com/api/songs\";\n\nclass MainPage extends Component {\n  state = {\n    songs: [],\n    selected: \"\",\n    search: {\n      searchInput: \"\",\n      searchLyrics: false,\n      searchChordedOnly: false,\n      searchRecordedOnly: false,\n    },\n    clickCount: 0,\n    viewLogin: false,\n    admin: \"\",\n    edit: false,\n  };\n  getSongs = () => {\n    axios\n      .get(apiUrl)\n      .then((response) => this.setState({ songs: response.data }))\n      .catch((error) => console.log(\"error fetching songs from db\"));\n  };\n  selectSong = (song) => {\n    console.log(song);\n    this.props.history.push({\n      pathname: \"/selectedSong\",\n      state: { song: song },\n    });\n  };\n\n  handleSearchChange = (event) => {\n    let search = this.state.search;\n    if (event.target.name === \"searchInput\") {\n      search.searchInput = event.target.value.toLowerCase();\n    } else {\n      const parameter = event.target.name;\n      search[parameter] = !search[parameter];\n    }\n    this.setState({ search });\n  };\n  componentDidMount() {\n    const token = window.localStorage.getItem(\"admin\");\n    if (token) {\n      this.setState({ admin: token });\n    }\n    this.getSongs();\n  }\n  render() {\n    return (\n      <Fragment>\n        <header id=\"home-section\" className=\"img-fluid\">\n          <div className=\"card-overlay\">\n            <div className=\"home-inner container\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <div className=\"form-group\">\n                    <SearchPage handleSearchChange={this.handleSearchChange} />\n                  </div>\n                </div>\n\n                {/* <MDBContainer size=\"md\" style={{ minHeight: \"100vh\" }}>\n          <JumbotronPage />\n          <SearchPage handleSearchChange={this.handleSearchChange} />\n          <SongList\n            songs={this.state.songs}\n            search={this.state.search}\n            selected={this.state.selected}\n            selectSong={this.selectSong}\n          />\n        </MDBContainer>\n         */}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <section id=\"song-list\" className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <ul className=\"list-group my-4\">\n                <SongList\n                  songs={this.state.songs}\n                  search={this.state.search}\n                  selected={this.state.selected}\n                  selectSong={this.selectSong}\n                />\n              </ul>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\n\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol, MDBCardBody } from \"mdbreact\";\nconst SongDetailsPage = (props) => {\n  let lyrics = props.location.state.song.lyrics.replace(\n    /(?:\\r\\n|\\r|\\n)/g,\n    \"<br />\"\n  );\n  return (\n    <MDBContainer className=\"mt-4 text-center\">\n      <MDBRow>\n        <MDBCol>\n          <h3>\n            {\" \"}\n            <strong> {props.location.state.song.name + \"\\n\\n\"} </strong>\n          </h3>\n        </MDBCol>\n      </MDBRow>\n      {/* <div class=\"col-lg-8 d-none d-lg-block\"></div> */}\n      <MDBRow className=\"d-none d-sm-block d-md-none\">\n        <MDBCol>\n          <h4>\n            {\" \"}\n            <strong> Tamil version </strong>\n          </h4>\n        </MDBCol>\n      </MDBRow>\n\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <MDBCardBody>\n            {/* <MDBCardTitle className=\"h3\">\n              {props.location.state.song.name + \"\\n\\n\"}\n            </MDBCardTitle> */}\n            <pre>{props.location.state.song.lyrics}</pre>\n          </MDBCardBody>\n        </MDBCol>\n\n        <MDBRow className=\"d-none d-sm-block d-md-none\">\n          <MDBCol>\n            <h4> English version</h4>\n          </MDBCol>\n        </MDBRow>\n\n        <MDBCol md=\"6\">\n          <MDBCardBody>\n            {/* <MDBCardTitle className=\"h3\">\n              {props.location.state.song.name + \"\\n\\n\"}\n            </MDBCardTitle> */}\n            <pre>{props.location.state.song.lyrics}</pre>\n          </MDBCardBody>\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCol>\n          <MDBBtn onClick={props.history.goBack} gradient=\"purple\" rounded>\n            Back\n          </MDBBtn>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default SongDetailsPage;\n","import React, { Component } from \"react\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n} from \"mdbreact\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nclass NavbarPage extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggleCollapse = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    return (\n      <Router>\n        <MDBNavbar fixed=\"top\" dark expand=\"md\">\n          <MDBNavbarBrand className=\"m1 p0 mx-1\">\n            <img\n              src=\"../../img/fcm-weblogo.png\"\n              href=\"#\"\n              className=\"logo-navbar\"\n              height=\"64rem\"\n              alt=\" FCM logo\"\n            />\n            <strong> Faith Church Ministries </strong>\n          </MDBNavbarBrand>\n          <MDBNavbarToggler onClick={this.toggleCollapse} />\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n            <MDBNavbarNav right>\n              <MDBNavItem active>\n                <MDBNavLink to=\"#!\">Home</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">Song List</MDBNavLink>\n              </MDBNavItem>\n              <MDBNavItem>\n                <MDBNavLink to=\"#!\">Contact Us</MDBNavLink>\n              </MDBNavItem>\n            </MDBNavbarNav>\n          </MDBCollapse>\n        </MDBNavbar>\n      </Router>\n    );\n  }\n}\n\nexport default NavbarPage;\n","import React from \"react\";\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter className=\"font-small  panel-footer sticky-footer\">\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright:{\" \"}\n          <a href=\"https://www.faithchurchministries.co.uk/\"> Faith Church Ministries </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n};\n\nexport default FooterPage;\n","import React, { Component } from \"react\";\r\n\r\nimport MainPage from \"./components/MainPage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport SongDetailsPage from \"./components/SongDetailsPage\";\r\nimport NavbarPage from \"./components/NavbarPage\";\r\nimport FooterPage from \"./components/FooterPage\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavbarPage />\r\n        <Route exact path=\"/\" component={MainPage} />\r\n        <Route exact path=\"/selectedSong\" component={SongDetailsPage} />\r\n        <FooterPage />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}